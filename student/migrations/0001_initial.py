# Generated by Django 4.2.4 on 2023-09-21 04:07

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import student.models.user


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('id', models.SmallAutoField(primary_key=True, serialize=False, unique=True)),
                ('student_branch', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'proj_student_branch',
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.SmallAutoField(primary_key=True, serialize=False, unique=True)),
                ('role', models.CharField(max_length=255, unique=True)),
            ],
            options={
                'db_table': 'proj_user_role',
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.SmallAutoField(primary_key=True, serialize=False, unique=True)),
                ('roll_No', models.IntegerField(unique=True)),
                ('f_Name', models.CharField(max_length=255)),
                ('m_name', models.CharField(max_length=255)),
                ('l_Name', models.CharField(max_length=255)),
                ('is_admitted', models.BooleanField(default=1)),
                ('created_by', models.CharField(blank=True, default='admin', max_length=255, null=True)),
                ('updated_by', models.CharField(blank=True, default='admin', max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=1)),
                ('branch_Id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='student.branch')),
            ],
            options={
                'db_table': 'proj_students',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.SmallAutoField(primary_key=True, serialize=False, unique=True)),
                ('username', models.CharField(max_length=25, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('failed_login_count', models.IntegerField(default=0)),
                ('is_password_change', models.IntegerField(default=0)),
                ('created_by', models.IntegerField(blank=True, null=True)),
                ('updated_by', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=1)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('role', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='student.role')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'proj_user',
            },
            managers=[
                ('objects', student.models.user.CustomUserManager()),
            ],
        ),
    ]
